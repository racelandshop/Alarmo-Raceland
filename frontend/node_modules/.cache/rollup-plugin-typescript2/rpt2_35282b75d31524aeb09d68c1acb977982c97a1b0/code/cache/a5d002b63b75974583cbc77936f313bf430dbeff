{"code":"import { __decorate } from \"tslib\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { property, customElement } from 'lit/decorators.js';\r\nlet AlarmoChip = class AlarmoChip extends LitElement {\r\n    render() {\r\n        return html `\n      <div class=\"chip ${this.checked ? 'selected' : ''}\" @click=${this._toggleSelect}>\n        ${this.renderCheckmark()}\n        <slot></slot>\n        ${this.renderButton()}\n      </div>\n    `;\r\n    }\r\n    renderCheckmark() {\r\n        if (!this.checkmark)\r\n            return html ``;\r\n        return html `\n      <div class=\"checkmark-container\">\n        <ha-icon icon=\"mdi:check\"></ha-icon>\n      </div>\n    `;\r\n    }\r\n    renderButton() {\r\n        if (this.cancellable) {\r\n            return html `\n        <div class=\"button-container\" @click=${this._buttonClick}>\n          <ha-icon icon=\"mdi:close\"></ha-icon>\n        </div>\n      `;\r\n        }\r\n        else if (this.badge !== undefined) {\r\n            return html `\n        <div class=\"badge-container\" @click=${this._buttonClick}>\n          ${this.badge}\n        </div>\n      `;\r\n        }\r\n        else\r\n            return html ``;\r\n    }\r\n    _toggleSelect() {\r\n        if (!this.value || !this.clickable)\r\n            return;\r\n        if (this.selectable)\r\n            this.checked = this.checked ? false : true;\r\n        const myEvent = new CustomEvent('value-changed', { detail: this.value });\r\n        this.dispatchEvent(myEvent);\r\n    }\r\n    _buttonClick() {\r\n        const myEvent = new CustomEvent('button-clicked', { detail: this.value });\r\n        this.dispatchEvent(myEvent);\r\n    }\r\n    static get styles() {\r\n        return css `\n      :host {\n        margin: 4px;\n      }\n      .chip {\n        display: flex;\n        position: relative;\n        height: 36px;\n        padding: 0px 16px;\n        align-items: center;\n        color: var(--primary-text-color);\n        user-select: none;\n        font-weight: 400;\n        z-index: 1;\n      }\n      :host([clickable]) .chip {\n        cursor: pointer;\n        color: var(--rgb-primary-color);\n        opacity: 0.85;\n      }\n      .chip:before {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        content: '';\n        border-radius: 8px;\n        border: 1px solid var(--primary-text-color);\n        opacity: 0.24;\n        z-index: -1;\n      }\n      :host([clickable]) .chip:hover,\n      :host([clickable]) .chip:active {\n        opacity: 1;\n      }\n      :host([clickable]) .chip:hover:before {\n        opacity: 0.3;\n      }\n      :host([clickable]) .chip:active:before {\n        opacity: 0.06;\n        background: var(--primary-text-color);\n      }\n      :host .chip.selected:before,\n      :host([cancellable]) .chip:before {\n        background: rgba(var(--rgb-primary-color), 0.18);\n        border: none;\n        opacity: 1;\n      }\n      :host .chip.selected:hover:before {\n        background: rgba(var(--rgb-primary-color), 0.24);\n        opacity: 1;\n      }\n      :host .chip.selected:active:before {\n        background: rgba(var(--rgb-primary-color), 0.3);\n        opacity: 1;\n      }\n      .chip div.checkmark-container {\n        width: 0px;\n        height: 100%;\n        transition: width 0.1s ease-in-out;\n        overflow: hidden;\n        display: flex;\n        align-items: center;\n        margin: 0px 4px 0px -4px;\n        --mdc-icon-size: 18px;\n      }\n      .chip.selected div.checkmark-container {\n        width: 18px;\n      }\n      .chip div.button-container {\n        width: 36px;\n        height: 36px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin: 0px -16px 0px 6px;\n        cursor: pointer;\n        --mdc-icon-size: 20px;\n        position: relative;\n        z-index: 1;\n        opacity: 0.85;\n        color: var(--dark-primary-color);\n      }\n      .chip div.button-container:before {\n        position: absolute;\n        top: 3px;\n        right: 3px;\n        bottom: 3px;\n        left: 3px;\n        pointer-events: none;\n        content: '';\n        border-radius: 15px;\n        z-index: -1;\n      }\n      .chip div.button-container:hover,\n      .chip div.button-container:hover {\n        opacity: 1;\n      }\n      .chip div.button-container:hover:before {\n        background: rgba(var(--rgb-primary-color), 0.12);\n      }\n      .chip div.button-container:active:before {\n        background: rgba(var(--rgb-primary-color), 0.24);\n      }\n      .chip div.badge-container {\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin: 0px -9px 0px 9px;\n        position: relative;\n        z-index: 1;\n        font-size: 0.875em;\n      }\n      .chip div.badge-container:before {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n        pointer-events: none;\n        content: '';\n        border-radius: 50%;\n        z-index: -1;\n      }\n      :host([table]) .chip {\n        height: 40px;\n      }\n      :host([table]) .chip:before {\n        border-radius: 4px;\n      }\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property({ type: String })\r\n], AlarmoChip.prototype, \"value\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], AlarmoChip.prototype, \"checked\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], AlarmoChip.prototype, \"checkmark\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], AlarmoChip.prototype, \"selectable\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], AlarmoChip.prototype, \"clickable\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], AlarmoChip.prototype, \"cancellable\", void 0);\r\n__decorate([\r\n    property({ type: Number })\r\n], AlarmoChip.prototype, \"badge\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], AlarmoChip.prototype, \"table\", void 0);\r\nAlarmoChip = __decorate([\r\n    customElement('alarmo-chip')\r\n], AlarmoChip);\r\nexport { AlarmoChip };\r\n","references":["/workspaces/RacelandHA/config/custom_components/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/node_modules/lit/decorators.d.ts"]}
