{"code":"import { __decorate } from \"tslib\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { property, customElement } from 'lit/decorators.js';\r\nimport { navigate } from 'custom-card-helpers';\r\nimport { loadHaForm } from './load-ha-elements';\r\nimport './views/general/view-general.ts';\r\nimport './views/sensors/view-sensors.ts';\r\nimport './views/codes/view-codes.ts';\r\nimport './views/actions/view-actions.ts';\r\nimport { commonStyle } from './styles';\r\nimport { VERSION } from './const';\r\nimport { fetchUsers } from './data/websockets';\r\nimport { localize } from '../localize/localize';\r\nimport { exportPath, getPath } from './common/navigation';\r\nlet MyAlarmPanel = class MyAlarmPanel extends LitElement {\r\n    async firstUpdated() {\r\n        window.addEventListener('location-changed', () => {\r\n            this.requestUpdate();\r\n        });\r\n        await loadHaForm();\r\n        this.userConfig = await fetchUsers(this.hass);\r\n        this.requestUpdate();\r\n    }\r\n    render() {\r\n        if (!customElements.get('ha-app-layout') || !this.userConfig)\r\n            return html `\r\n        loading...\r\n      `;\r\n        const path = getPath();\r\n        return html `\r\n      <ha-app-layout>\r\n        <app-header fixed slot=\"header\">\r\n          <app-toolbar>\r\n            <ha-menu-button .hass=${this.hass} .narrow=${this.narrow}></ha-menu-button>\r\n            <div main-title>\r\n              ${localize('title', this.hass.language)}\r\n            </div>\r\n            <div class=\"version\">\r\n              v${VERSION}\r\n            </div>\r\n          </app-toolbar>\r\n          <ha-tabs\r\n            scrollable\r\n            attr-for-selected=\"page-name\"\r\n            .selected=${path.page}\r\n            @iron-activate=${this.handlePageSelected}\r\n          >\r\n            <paper-tab page-name=\"general\">\r\n              ${localize('panels.general.title', this.hass.language)}\r\n            </paper-tab>\r\n            <paper-tab page-name=\"sensors\">\r\n              ${localize('panels.sensors.title', this.hass.language)}\r\n            </paper-tab>\r\n            <paper-tab page-name=\"codes\">\r\n              ${localize('panels.codes.title', this.hass.language)}\r\n            </paper-tab>\r\n            <paper-tab page-name=\"actions\">\r\n              ${localize('panels.actions.title', this.hass.language)}\r\n            </paper-tab>\r\n          </ha-tabs>\r\n        </app-header>\r\n      </ha-app-layout>\r\n      <div class=\"view\">\r\n        ${this.getView(path)}\r\n      </div>\r\n    `;\r\n    }\r\n    getView(path) {\r\n        const page = path.page;\r\n        switch (page) {\r\n            case 'general':\r\n                return html `\r\n          <alarm-view-general .hass=${this.hass} .narrow=${this.narrow} .path=${path}></alarm-view-general>\r\n        `;\r\n            case 'sensors':\r\n                return html `\r\n          <alarm-view-sensors .hass=${this.hass} .narrow=${this.narrow} .path=${path}></alarm-view-sensors>\r\n        `;\r\n            case 'codes':\r\n                return html `\r\n          <alarm-view-codes .hass=${this.hass} .narrow=${this.narrow} .path=${path}></alarm-view-codes>\r\n        `;\r\n            case 'actions':\r\n                return html `\r\n          <alarm-view-actions .hass=${this.hass} .narrow=${this.narrow} .path=${path}></alarm-view-actions>\r\n        `;\r\n            default:\r\n                return html `\r\n          <ha-card header=\"Page not found\">\r\n            <div class=\"card-content\">\r\n              The page you are trying to reach cannot be found. Please select a page from the menu above to continue.\r\n            </div>\r\n          </ha-card>\r\n        `;\r\n        }\r\n    }\r\n    handlePageSelected(ev) {\r\n        const newPage = ev.detail.item.getAttribute('page-name');\r\n        if (newPage !== getPath()) {\r\n            navigate(this, exportPath(newPage));\r\n            this.requestUpdate();\r\n        }\r\n        else {\r\n            scrollTo(0, 0);\r\n        }\r\n    }\r\n    static get styles() {\r\n        return css `\r\n      ${commonStyle} :host {\r\n        color: var(--primary-text-color);\r\n        --paper-card-header-color: var(--primary-text-color);\r\n      }\r\n\r\n      app-header,\r\n      app-toolbar {\r\n        background-color: var(--app-header-background-color);\r\n        font-weight: 400;\r\n        color: var(--app-header-text-color, white);\r\n      }\r\n      app-toolbar {\r\n        height: var(--header-height);\r\n      }\r\n\r\n      ha-app-layout {\r\n        display: block;\r\n        z-index: 2;\r\n      }\r\n\r\n      app-toolbar [main-title] {\r\n        margin-left: 20px;\r\n      }\r\n\r\n      ha-tabs {\r\n        margin-left: max(env(safe-area-inset-left), 24px);\r\n        margin-right: max(env(safe-area-inset-right), 24px);\r\n        --paper-tabs-selection-bar-color: var(--app-header-selection-bar-color, var(--app-header-text-color, #fff));\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      .view {\r\n        height: calc(100vh - 112px);\r\n        display: flex;\r\n        justify-content: center;\r\n      }\r\n\r\n      .view > * {\r\n        width: 600px;\r\n        max-width: 600px;\r\n      }\r\n\r\n      .view > *:last-child {\r\n        margin-bottom: 20px;\r\n      }\r\n\r\n      .version {\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        color: rgba(var(--rgb-text-primary-color), 0.9);\r\n      }\r\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property()\r\n], MyAlarmPanel.prototype, \"hass\", void 0);\r\n__decorate([\r\n    property({ type: Boolean, reflect: true })\r\n], MyAlarmPanel.prototype, \"narrow\", void 0);\r\n__decorate([\r\n    property()\r\n], MyAlarmPanel.prototype, \"userConfig\", void 0);\r\nMyAlarmPanel = __decorate([\r\n    customElement('alarm-panel')\r\n], MyAlarmPanel);\r\nexport { MyAlarmPanel };\r\n","references":["/workspaces/RacelandHA/config/custom_components/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/node_modules/lit/decorators.d.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/node_modules/custom-card-helpers/dist/index.d.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/src/load-ha-elements.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/src/styles.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/src/const.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/src/data/websockets.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/src/types.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/localize/localize.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/src/common/navigation.ts"]}
