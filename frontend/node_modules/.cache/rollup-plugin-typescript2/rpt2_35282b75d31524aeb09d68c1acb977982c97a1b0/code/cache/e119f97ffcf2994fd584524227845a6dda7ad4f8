{"code":"import { html } from 'lit';\r\nimport { stateIcon, fireEvent } from 'custom-card-helpers';\r\nimport { platform, AlarmStates, AlarmCommands } from './const';\r\nimport { EArmModes } from './types';\r\nexport function getDomain(entity) {\r\n    const entity_id = typeof entity == 'string' ? entity : entity.entity_id;\r\n    return String(entity_id.split('.').shift());\r\n}\r\nexport function computeIcon(entity) {\r\n    return stateIcon(entity);\r\n}\r\nexport function prettyPrint(input) {\r\n    input = input.replace('_', ' ');\r\n    return input.charAt(0).toUpperCase() + input.slice(1);\r\n}\r\nexport function computeName(entity) {\r\n    if (!entity)\r\n        return '(unrecognized entity)';\r\n    if (entity.attributes && entity.attributes.friendly_name)\r\n        return entity.attributes.friendly_name;\r\n    else\r\n        return String(entity.entity_id.split('.').pop());\r\n}\r\nexport function getAlarmEntity(hass) {\r\n    return String(hass.panels[platform].config.entity_id);\r\n}\r\nexport function isEqual(...arr) {\r\n    return arr.every(e => JSON.stringify(e) === JSON.stringify(arr[0]));\r\n}\r\nexport function Unique(arr) {\r\n    let res = [];\r\n    arr.forEach(item => {\r\n        if (!res.find(e => (typeof item === 'object' ? isEqual(e, item) : e === item)))\r\n            res.push(item);\r\n    });\r\n    return res;\r\n}\r\nexport function Without(array, item) {\r\n    return array.filter(e => e !== item);\r\n}\r\nexport function pick(obj, keys) {\r\n    if (!obj)\r\n        return {};\r\n    return Object.entries(obj)\r\n        .filter(([key]) => keys.includes(key))\r\n        .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {});\r\n}\r\nexport function flatten(arr) {\r\n    if (arr.every(val => !Array.isArray(val))) {\r\n        return arr.slice();\r\n    }\r\n    return arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatten(val) : val), []);\r\n}\r\nexport const omit = (obj, ...keys) => {\r\n    const ret = {};\r\n    let key;\r\n    for (key in obj) {\r\n        if (!keys.includes(key)) {\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n};\r\nexport function isDefined(value) {\r\n    return value !== null && value !== undefined;\r\n}\r\nexport function IsEqual(obj1, obj2) {\r\n    if (obj1 === null || obj2 === null)\r\n        return obj1 === obj2;\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n    if (keys1.length !== keys2.length)\r\n        return false;\r\n    for (const key of keys1) {\r\n        if (typeof obj1[key] === 'object' && typeof obj2[key] === 'object') {\r\n            if (!IsEqual(obj1[key], obj2[key]))\r\n                return false;\r\n        }\r\n        else if (obj1[key] !== obj2[key])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nexport function showErrorDialog(ev, error) {\r\n    const elem = ev.hasOwnProperty('tagName') ? ev : ev.target;\r\n    fireEvent(elem, 'show-dialog', {\r\n        dialogTag: 'error-dialog',\r\n        dialogImport: () => import('./dialogs/error-dialog'),\r\n        dialogParams: { error: error },\r\n    });\r\n}\r\nexport function handleError(err, ev) {\r\n    const errorMessage = html `\r\n    <b>Something went wrong!</b>\r\n    <br />\r\n    ${err.body.message\r\n        ? html `\r\n          ${err.body.message}\r\n          <br />\r\n          <br />\r\n        `\r\n        : ''}\r\n    ${err.error}\r\n    <br />\r\n    <br />\r\n    Please\r\n    <a href=\"https://github.com/nielsfaber/alarmo/issues\">report</a>\r\n    the bug.\r\n  `;\r\n    showErrorDialog(ev, errorMessage);\r\n}\r\nexport const commandToState = (command) => {\r\n    switch (command) {\r\n        case AlarmCommands.COMMAND_ALARM_DISARM:\r\n            return AlarmStates.STATE_ALARM_DISARMED;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_HOME:\r\n            return AlarmStates.STATE_ALARM_ARMED_HOME;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_AWAY:\r\n            return AlarmStates.STATE_ALARM_ARMED_AWAY;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_NIGHT:\r\n            return AlarmStates.STATE_ALARM_ARMED_NIGHT;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_CUSTOM_BYPASS:\r\n            return AlarmStates.STATE_ALARM_ARMED_CUSTOM_BYPASS;\r\n        case AlarmCommands.COMMAND_ALARM_ARM_VACATION:\r\n            return AlarmStates.STATE_ALARM_ARMED_VACATION;\r\n        default:\r\n            return undefined;\r\n    }\r\n};\r\nexport const filterState = (state, config) => {\r\n    var _a, _b, _c, _d, _e;\r\n    if (!state)\r\n        return false;\r\n    switch (state) {\r\n        case AlarmStates.STATE_ALARM_ARMED_AWAY:\r\n            return (_a = config[EArmModes.ArmedAway]) === null || _a === void 0 ? void 0 : _a.enabled;\r\n        case AlarmStates.STATE_ALARM_ARMED_HOME:\r\n            return (_b = config[EArmModes.ArmedHome]) === null || _b === void 0 ? void 0 : _b.enabled;\r\n        case AlarmStates.STATE_ALARM_ARMED_NIGHT:\r\n            return (_c = config[EArmModes.ArmedNight]) === null || _c === void 0 ? void 0 : _c.enabled;\r\n        case AlarmStates.STATE_ALARM_ARMED_CUSTOM_BYPASS:\r\n            return (_d = config[EArmModes.ArmedCustom]) === null || _d === void 0 ? void 0 : _d.enabled;\r\n        case AlarmStates.STATE_ALARM_ARMED_VACATION:\r\n            return (_e = config[EArmModes.ArmedVacation]) === null || _e === void 0 ? void 0 : _e.enabled;\r\n        default:\r\n            return true;\r\n    }\r\n};\r\nexport function Assign(obj, changes) {\r\n    Object.entries(changes).forEach(([key, val]) => {\r\n        if (key in obj && typeof obj[key] == 'object' && obj[key] !== null)\r\n            obj = Object.assign(Object.assign({}, obj), { [key]: Assign(obj[key], val) });\r\n        else\r\n            obj = Object.assign(Object.assign({}, obj), { [key]: val });\r\n    });\r\n    return obj;\r\n}\r\nexport function sortAlphabetically(a, b) {\r\n    const stringVal = (s) => typeof s === 'object' ? stringVal(s.name) : s.trim().toLowerCase();\r\n    return stringVal(a) < stringVal(b) ? -1 : 1;\r\n}\r\n","references":["/workspaces/RacelandHA/config/custom_components/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/node_modules/custom-card-helpers/dist/index.d.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/node_modules/home-assistant-js-websocket/dist/index.d.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/src/const.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/src/types.ts","/workspaces/RacelandHA/config/custom_components/alarmo/frontend/src/dialogs/error-dialog.ts"]}
