{"code":"export const getPath = () => {\r\n    const pairsToDict = (pairs) => {\r\n        let res = {};\r\n        for (let i = 0; i < pairs.length; i += 2) {\r\n            const key = pairs[i];\r\n            const val = i < pairs.length ? pairs[i + 1] : undefined;\r\n            res = Object.assign(Object.assign({}, res), { [key]: val });\r\n        }\r\n        return res;\r\n    };\r\n    const parts = window.location.pathname.split('/');\r\n    let path = {\r\n        page: parts[2] || 'general',\r\n        params: {},\r\n    };\r\n    if (parts.length > 3) {\r\n        let extraArgs = parts.slice(3);\r\n        if (parts.includes('filter')) {\r\n            const n = extraArgs.findIndex(e => e == 'filter');\r\n            const filterParts = extraArgs.slice(n + 1);\r\n            extraArgs = extraArgs.slice(0, n);\r\n            path = Object.assign(Object.assign({}, path), { filter: pairsToDict(filterParts) });\r\n        }\r\n        if (extraArgs.length) {\r\n            if (extraArgs.length % 2)\r\n                path = Object.assign(Object.assign({}, path), { subpage: extraArgs.shift() });\r\n            if (extraArgs.length)\r\n                path = Object.assign(Object.assign({}, path), { params: pairsToDict(extraArgs) });\r\n        }\r\n    }\r\n    return path;\r\n};\r\nexport const exportPath = (page, ...args) => {\r\n    let path = {\r\n        page: page,\r\n        params: {},\r\n    };\r\n    args.forEach(e => {\r\n        if (typeof e == 'string')\r\n            path = Object.assign(Object.assign({}, path), { subpage: e });\r\n        else if ('params' in e)\r\n            path = Object.assign(Object.assign({}, path), { params: e.params });\r\n        else if ('filter' in e)\r\n            path = Object.assign(Object.assign({}, path), { filter: e.filter });\r\n    });\r\n    const dictToString = (dict) => {\r\n        let keys = Object.keys(dict);\r\n        keys = keys.filter(e => dict[e]);\r\n        keys.sort();\r\n        let string = '';\r\n        keys.forEach(key => {\r\n            const val = dict[key];\r\n            string = string.length ? `${string}/${key}/${val}` : `${key}/${val}`;\r\n        });\r\n        return string;\r\n    };\r\n    let url = `/alarmo/${path.page}`;\r\n    if (path.subpage)\r\n        url = `${url}/${path.subpage}`;\r\n    if (dictToString(path.params).length)\r\n        url = `${url}/${dictToString(path.params)}`;\r\n    if (path.filter)\r\n        url = `${url}/filter/${dictToString(path.filter)}`;\r\n    return url;\r\n};\r\n","references":[]}
